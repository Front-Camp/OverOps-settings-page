// Generate a color palette based onf the passed array of colors
@mixin gen-palette($colorsArray) {
  @each $colorName, $colorValue in $colorsArray {
    @if(ends-with($colorName, 'G')) {
      .#{str-replace($colorName, 'G', '')}-bg-gradient {
        background-image: map_get($colorsArray, $colorName)
      }
    } @else {
      .#{str-replace($colorName, 'F', '')}-color {
        color: map_get($colorsArray, $colorName);
      }
      .#{str-replace($colorName, 'F', '')}-bg {
        background-color: map_get($colorsArray, $colorName);
      }
      .#{str-replace($colorName, 'F', '')}-border {
        border: 1px solid map_get($colorsArray, $colorName);
      }
    }
  }
}

@mixin set-size($width: 0px, $height: 0px) {
  width: $width;
  height: $height;
}

@mixin set-size-bg($width: 0px, $height: 0px, $bg: inherit) {
  @include set-size($width, $height);
  background-color: $bg;
}

@mixin set-flex($flex-direction: row, $justify-content: flex-start, $align-items: stretch) {
  display: flex;
  flex-direction: $flex-direction;
  justify-content: $justify-content;
  align-items: $align-items;
}
